plugins {
    id "java"
    id "io.qameta.allure" version "3.0.0"
}

jar {
    archiveBaseName = 'junit-vs-testng'
    archiveVersion = '1.0.0'
}

compileTestJava {
    sourceCompatibility = 17
    targetCompatibility = 17
    options.compilerArgs += "-parameters"
}

test {
    useJUnitPlatform() {
        if (project.hasProperty("groups")) {
            includeTags "$groups"
        }
        if (project.hasProperty("excludedGroups")) {
            excludeTags "$excludedGroups"
        }
    }

    useTestNG() {
        suites 'src/test/resources/testng.xml'
        if (project.hasProperty("groups")) {
            includeGroups "$groups"
        }
        if (project.hasProperty("excludedGroups")) {
            excludeGroups "$excludedGroups"
        }
    }

    scanForTestClasses = false

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }

    systemProperties System.properties

    if (project.hasProperty("parallel")) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    if (project.hasProperty("suite")) {
        suites "$suite"
    }

    if (project.hasProperty("excludeTests")) {
        "$excludeTests".split(",").each { excludeTests ->
            exclude excludeTests
        }
    }

    ext.failedTests = []

    tasks.withType(Test) {
        afterTest { TestDescriptor descriptor, TestResult result ->
            if(result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE) {
                failedTests << ["${descriptor.className}::${descriptor.name}"]
            }
        }
    }

    gradle.buildFinished {
        if(!failedTests.empty){
            println "Failed test(s) for ${project.name}:"
            failedTests.each { failedTest ->
                println failedTest
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.slf4j:slf4j-api:2.0.17")
    implementation("ch.qos.logback:logback-classic:1.5.19")

    testImplementation("org.junit.jupiter:junit-jupiter:5.13.4")
    testImplementation("org.junit.platform:junit-platform-launcher:1.13.4")
    testImplementation("org.testng:testng:7.11.0")
    testImplementation("org.assertj:assertj-core:3.27.6")
    testImplementation("org.seleniumhq.selenium:selenium-java:4.35.0")
    testImplementation("io.github.artsok:rerunner-jupiter:2.1.6")
    testImplementation("com.aventstack:extentreports:5.1.2")
}
